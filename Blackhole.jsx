/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: rubykamen (https://sketchfab.com/rubykamen)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/blackhole-74cbeaeae2174a218fe9455d77902b5c
Title: Blackhole
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations, useTexture } from '@react-three/drei'
import { useGSAP } from '@gsap/react'
import {useFrame} from '@react-three/fiber';
import * as THREE from 'three'

const Stars = () => {
  const starRefs = useRef([]);
  const starCount = 100;//Number of stars

  const stars = Array.from({length:starCount}, () => ({
    position: [
      (Math.random() - 0.5) * 20, //Random x
      (Math.random() - 0.5) * 20, //Random y
      Math.random() * 50 + 50 
    ],
    speed: Math.random() * 0.05 + 0.02 //Random speed
}));

useFrame(() => {
  stars.forEach((star, index) => {
    if(starRefs.current[index]){
      //Move stars toward the black hole's center
      starRefs.current[index].position.z -= star.speed;
      if(starRefs.current[index].position.z < 0){
        //Reset star to appear from the edge again
        starRefs.current[index].position.z = Math.random() * 50+50;// Reset behind the black hole
        starRefs.current[index].position.x = (Math.random() * -0.5) * 20; // Random x
        starRefs.current[index].position.y = (Math.random() * - 0.5) * 20; // Random y

      }
    }
  });
});

  return (
  <points>
    <bufferGeometry
    attach="fixed"
    array={new Float32Array([100,20,10])}
    itemSize={3}
    count={100}
    >
    </bufferGeometry>
    <pointsMaterial color="white" size={100}/>
  </points>
  );
};


const Blackhole = ({color = '#D3D3D3',...props}) => {

  const group = useRef();
  const { nodes, materials, animations } = useGLTF('public/blackhole.glb');
  const { actions } = useAnimations(animations, group);

  //Reference to the outer ring group
  const outerRingRef = useRef()
  //Rotate the outer ring on each from
  useFrame(() => {
    if(outerRingRef.current){
        outerRingRef.current.rotation.z += 0.001//adjust the speed of rotation here
    }
  })

  //Call this function with the desired color
  materials.Blackhole_ring.color.set('red');

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[+Math.PI / 1, 0, 2]} scale={0.028}>
          <group name="415c209837844e7b91255101a7c3eb67fbx" rotation={[Math.PI / 9, 0, 0]}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="Blackhole_core" rotation={[-Math.PI / 2, 0, 0]} scale={1.40}>
                  <mesh
                    name="Blackhole_core_Blackhole_core_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_core_Blackhole_core_0.geometry}
                    material={materials.Blackhole_core}
                  />
                </group>
                <group name="Blackhole_ring" ref={outerRingRef} rotation={[-Math.PI / 1, 50, 0]}>
                  <mesh
                    name="Blackhole_ring_Blackhole_ring_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_ring_Blackhole_ring_0.geometry}
                    material={materials.Blackhole_ring}
                  />
                </group>
                <group name="Blackhole_skin_001" rotation={[-Math.PI / 2, 0, 0]} scale={0.959}>
                  <mesh
                    name="Blackhole_skin_001_Blackhole_skin_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_skin_001_Blackhole_skin_0.geometry}
                    material={materials.Blackhole_skin}
                  />
                </group>
                <group name="Blackhole_skin_002" rotation={[-Math.PI / 2, 0, 0]} scale={0.957}>
                  <mesh
                    name="Blackhole_skin_002_Blackhole_core_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_skin_002_Blackhole_core_0.geometry}
                    material={materials.Blackhole_core}
                  />
                </group>
                <group name="Blackhole_skin_003" rotation={[-Math.PI / 2, 0, 0]} scale={0.91}>
                  <mesh
                    name="Blackhole_skin_003_Blackhole_skin_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_skin_003_Blackhole_skin_0.geometry}
                    material={materials.Blackhole_skin}
                  />
                </group>
                <group name="Blackhole_skin_004" rotation={[-Math.PI / 2, 0, 0]} scale={0.908}>
                  <mesh
                    name="Blackhole_skin_004_Blackhole_core_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_skin_004_Blackhole_core_0.geometry}
                    material={materials.Blackhole_core}
                  />
                </group>
                <group name="Blackhole_skin_005" rotation={[-Math.PI / 2, 0, 0.96]} scale={0.9}>
                  <mesh
                    name="Blackhole_skin_005_Blackhole_skin_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_skin_005_Blackhole_skin_0.geometry}
                    material={materials.Blackhole_skin}
                  />
                </group>
                <group name="Blackhole_skin_006" rotation={[-Math.PI / 0, 0, -2.007]} scale={0.864}>
                  <mesh
                    name="Blackhole_skin_006_Blackhole_skin_inner_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_skin_006_Blackhole_skin_inner_0.geometry}
                    material={materials.Blackhole_skin_inner}
                  />
                </group>
                <group name="Blackhole_skin_007" rotation={[-Math.PI / 2, 0, -2.007]} scale={0.866}>
                  <mesh
                    name="Blackhole_skin_007_Blackhole_core_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_skin_007_Blackhole_core_0.geometry}
                    material={materials.Blackhole_core}
                  />
                </group>
                <group name="Blackhole_core001" rotation={[-Math.PI / 2, 0, 0]}>
                  <mesh
                    name="Blackhole_core001_Blackhole_core_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_core001_Blackhole_core_0.geometry}
                    material={materials.Blackhole_core}
                  />
                </group>
                <group name="Blackhole_skin_008" rotation={[-Math.PI / 2, 0, 0.087]} scale={0.845}>
                  <mesh
                    name="Blackhole_skin_008_Blackhole_skin_inner_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_skin_008_Blackhole_skin_inner_0.geometry}
                    material={materials.Blackhole_skin_inner}
                  />
                </group>
                <group name="Blackhole_skin_009" rotation={[-Math.PI / 2, 0, -0.611]} scale={0.887}>
                  <mesh
                    name="Blackhole_skin_009_Blackhole_skin_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_skin_009_Blackhole_skin_0.geometry}
                    material={materials.Blackhole_skin}
                  />
                </group>
                <group name="Blackhole_skin_010" rotation={[-Math.PI / 2, 1, 2.531]} scale={-0.929}>
                  <mesh
                    name="Blackhole_skin_010_Blackhole_skin_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_skin_010_Blackhole_skin_0.geometry}
                    material={materials.Blackhole_skin}
                  />
                </group>
                <group name="Blackhole_skin_011" rotation={[-Math.PI / 2, 0, -2.531]} scale={5}>
                  <mesh
                    name="Blackhole_skin_011_Blackhole_core_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_skin_011_Blackhole_core_0.geometry}
                    material={materials.Blackhole_core}
                  />
                </group>
                <group name="Blackhole_skin_012" rotation={[-Math.PI / 2, 0, 2.094]} scale={0.856}>
                  <mesh
                    name="Blackhole_skin_012_Blackhole_skin_inner_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_skin_012_Blackhole_skin_inner_0.geometry}
                    material={materials.Blackhole_skin_inner}
                  />
                </group>
                <group name="Blackhole_skin_013" rotation={[-Math.PI / 2, 0, -2.967]} scale={0.835}>
                  <mesh
                    name="Blackhole_skin_013_Blackhole_ring2_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_skin_013_Blackhole_ring2_0.geometry}
                    material={materials.Blackhole_ring2}
                  />
                </group>
                <group name="Blackhole_core002" rotation={[-Math.PI / 2, 0, 0]} scale={0.928}>
                  <mesh
                    name="Blackhole_core002_Blackhole_ring2_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.Blackhole_core002_Blackhole_ring2_0.geometry}
                    material={materials.Blackhole_ring2}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('public/blackhole.glb');
export default Blackhole;